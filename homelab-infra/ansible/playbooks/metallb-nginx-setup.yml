---
# Playbook to install and configure MetalLB and NGINX Ingress Controller on k3s cluster
- name: Install MetalLB and NGINX Ingress Controller
  hosts: k3s_control_nodes[0] # Run on the first control node
  become: false
  vars:
    metallb_version: "v0.14.9"
    nginx_ingress_version: "controller-v1.12.1"
    metallb_ip_range: "10.20.20.60-10.20.20.70"
    kubectl_wait_timeout: 300 # 5 minutes timeout

  tasks:
    - name: Create temporary directory for manifests
      ansible.builtin.tempfile:
        state: directory
        suffix: manifests
      register: temp_dir

    - name: Download NGINX Ingress Controller manifest
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/kubernetes/ingress-nginx/{{ nginx_ingress_version }}/deploy/static/provider/cloud/deploy.yaml"
        dest: "{{ temp_dir.path }}/nginx-ingress-controller.yaml"
        mode: "0644"

    - name: Apply NGINX Ingress Controller manifest
      ansible.builtin.command:
        cmd: kubectl apply -f {{ temp_dir.path }}/nginx-ingress-controller.yaml
      register: nginx_apply
      changed_when: "'created' in nginx_apply.stdout or 'configured' in nginx_apply.stdout"

    - name: Wait for NGINX Ingress Controller pods to be ready
      ansible.builtin.command:
        cmd: kubectl wait --namespace=ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout={{ kubectl_wait_timeout }}s
      register: nginx_wait
      changed_when: false
      failed_when: nginx_wait.rc != 0
      retries: 5
      delay: 10
      until: nginx_wait.rc == 0

    - name: Download MetalLB manifest
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/config/manifests/metallb-native.yaml"
        dest: "{{ temp_dir.path }}/metallb-native.yaml"
        mode: "0644"

    - name: Apply MetalLB manifest
      ansible.builtin.command:
        cmd: kubectl apply -f {{ temp_dir.path }}/metallb-native.yaml
      register: metallb_apply
      changed_when: "'created' in metallb_apply.stdout or 'configured' in metallb_apply.stdout"

    - name: Wait for MetalLB pods to be ready
      ansible.builtin.command:
        cmd: kubectl wait --namespace=metallb-system --for=condition=ready pod --selector=app=metallb --timeout={{ kubectl_wait_timeout }}s
      register: metallb_wait
      changed_when: false
      failed_when: metallb_wait.rc != 0
      retries: 5
      delay: 10
      until: metallb_wait.rc == 0

    - name: Create MetalLB configuration
      ansible.builtin.copy:
        dest: "{{ temp_dir.path }}/metallb-config.yaml"
        content: |
          apiVersion: metallb.io/v1beta1
          kind: IPAddressPool
          metadata:
            name: default-pool
            namespace: metallb-system
          spec:
            addresses:
            - {{ metallb_ip_range }}
          ---
          apiVersion: metallb.io/v1beta1
          kind: L2Advertisement
          metadata:
            name: default
            namespace: metallb-system
          spec:
            ipAddressPools:
            - default-pool
        mode: "0644"

    - name: Apply MetalLB configuration
      ansible.builtin.command:
        cmd: kubectl apply -f {{ temp_dir.path }}/metallb-config.yaml
      register: metallb_config_apply
      changed_when: "'created' in metallb_config_apply.stdout or 'configured' in metallb_config_apply.stdout"

    - name: Wait for MetalLB configuration to be applied
      ansible.builtin.pause:
        seconds: 10

    - name: Check NGINX Ingress Controller external IP
      ansible.builtin.command:
        cmd: kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: ingress_nginx_ip
      changed_when: false
      failed_when: false
      retries: 10
      delay: 10
      until: ingress_nginx_ip.stdout != ""

    - name: Display NGINX Ingress Controller external IP
      ansible.builtin.debug:
        msg: "NGINX Ingress Controller is available at IP: {{ ingress_nginx_ip.stdout }}"
      when: ingress_nginx_ip.stdout != ""

    - name: Warning if NGINX Ingress Controller IP not assigned
      ansible.builtin.debug:
        msg: "Warning: No external IP assigned to NGINX Ingress Controller. Check MetalLB configuration."
      when: ingress_nginx_ip.stdout == ""

    - name: Create sample ingress info file
      ansible.builtin.copy:
        dest: "{{ temp_dir.path }}/sample-ingress-example.yaml"
        content: |
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: sample-app
            namespace: default
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
          spec:
            ingressClassName: nginx
            rules:
            - host: app.example.local  # Replace with your desired hostname
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: sample-app-service  # Replace with your service name
                      port:
                        number: 80  # Replace with your service port
        mode: "0644"

    - name: Display sample ingress information
      ansible.builtin.debug:
        msg: "A sample ingress definition has been created at {{ temp_dir.path }}/sample-ingress-example.yaml"

    - name: Display hosts file configuration information
      ansible.builtin.debug:
        msg: "Remember to update your /etc/hosts file with: {{ ingress_nginx_ip.stdout }} app.example.local"
      when: ingress_nginx_ip.stdout != ""
